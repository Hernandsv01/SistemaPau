/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import editors.EditorRegistro;
import tools.PopupMessage;
import tools.Clase;
import tools.DBConnection;
import java.awt.Color;
import java.time.LocalTime;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Edu
 */
public class ClaseFrame extends javax.swing.JFrame {
    DefaultTableModel model1 = new DefaultTableModel();
    DefaultTableModel model2 = new DefaultTableModel();
    DefaultTableModel model3 = new DefaultTableModel();
    DefaultTableModel model4 = new DefaultTableModel();

    /**
     * Creates new form MainFrame
     */
    public ClaseFrame() {
        initComponents();
        initModelListaSemanal();
        initModelRegistroClases();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablasemanal = new javax.swing.JTable();
        btnactualizarclases = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        boxdia = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        txttematica = new javax.swing.JTextPane();
        btncrearclase = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        txttitulo = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        boxhorario = new javax.swing.JComboBox<>();
        boxduracion = new javax.swing.JComboBox<>();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaregistro = new javax.swing.JTable();
        btnactualizarregistro = new javax.swing.JButton();
        btnagregarregistro = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 711, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 456, Short.MAX_VALUE)
        );

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(jTable4);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        tablasemanal.setAutoCreateRowSorter(true);
        tablasemanal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"08:00 - 08:30", null, null, null, null, null, null},
                {"08:30 - 09:00", null, null, null, null, null, null},
                {"09:00 - 09:30", null, null, null, null, null, null},
                {"09:30 - 10:00", null, null, null, null, null, null},
                {"10:00 - 10:30", null, null, null, null, null, null},
                {"10:30 - 11:00", null, null, null, null, null, null},
                {"11:00 - 11:30", null, null, null, null, null, null},
                {"11:30 - 12:00", null, null, null, null, null, null},
                {"12:00 - 12:30", null, null, null, null, null, null},
                {"12:30 - 13:00", null, null, null, null, null, null},
                {"13:00 - 13:30", null, null, null, null, null, null},
                {"13:30 - 14:00", null, null, null, null, null, null},
                {"14:00 - 14:30", null, null, null, null, null, null},
                {"14:30 - 15:00", null, null, null, null, null, null},
                {"15:00 - 15:30", null, null, null, null, null, null},
                {"15:30 - 16:00", null, null, null, null, null, null},
                {"16:00 - 16:30", null, null, null, null, null, null},
                {"16:30 - 17:00", null, null, null, null, null, null},
                {"17:00 - 17:30", null, null, null, null, null, null},
                {"17:30 - 18:00", null, null, null, null, null, null},
                {"18:00 - 18:30", null, null, null, null, null, null},
                {"18:30 - 19:00", null, null, null, null, null, null},
                {"19:00 - 19:30", null, null, null, null, null, null},
                {"19:30 - 20:00", null, null, null, null, null, null}
            },
            new String [] {
                "", "Lunes", "Martes", "Miercoles", "Jueves", "Viernes", "Sabado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tablasemanal.setCellSelectionEnabled(true);
        tablasemanal.setRowHeight(25);
        tablasemanal.setSurrendersFocusOnKeystroke(true);
        tablasemanal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablasemanalMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablasemanal);
        tablasemanal.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        btnactualizarclases.setText("Actualizar");
        btnactualizarclases.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnactualizarclasesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(657, Short.MAX_VALUE)
                .addComponent(btnactualizarclases, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnactualizarclases, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Clases Semanales", jPanel8);

        jLabel8.setText("Horario: ");

        jLabel9.setText("Dia de la semana:");

        boxdia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione un dia", "Lunes", "Martes", "Miercoles", "Jueves", "Viernes", "Sabado" }));

        jLabel11.setText("Temática");

        jScrollPane7.setViewportView(txttematica);

        btncrearclase.setText("Crear");
        btncrearclase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncrearclaseActionPerformed(evt);
            }
        });

        jLabel12.setText("Titulo:");

        txttitulo.setToolTipText("00:00");

        jLabel13.setText("Duración:");

        boxhorario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione un horario", "08:00", "08:30", "09:00", "09:30", "10:00", "10:30", "11:00", "11:30", "12:00", "12:30", "13:00", "13:30", "14:00", "14:30", "15:00", "15:30", "16:00", "16:30", "17:00", "17:30", "18:00", "18:30", "19:00", "19:30" }));

        boxduracion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione una duración", "00:30", "01:00", "01:30", "02:00", "02:30", "03:00" }));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btncrearclase, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(90, 90, 90))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel8)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13))
                .addGap(46, 46, 46)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txttitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(boxdia, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 694, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(boxhorario, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(boxduracion, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(108, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txttitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(boxhorario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(boxduracion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(boxdia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(btncrearclase, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        jTabbedPane1.addTab("Crear Clase Semanal", jPanel7);

        tablaregistro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Fecha", "Dia de la semana", "Hora", "Alumnos esperados", "Ausentes"
            }
        ));
        tablaregistro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaregistroMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tablaregistro);

        btnactualizarregistro.setText("Actualizar");
        btnactualizarregistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnactualizarregistroActionPerformed(evt);
            }
        });

        btnagregarregistro.setText("Agregar");
        btnagregarregistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnagregarregistroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 969, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnagregarregistro, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnactualizarregistro, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 476, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnactualizarregistro, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnagregarregistro, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jTabbedPane1.addTab("Registro Clases", jPanel6);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jTabbedPane1))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnactualizarregistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnactualizarregistroActionPerformed
        // Deletes previous table
        int elitotal = tablaregistro.getRowCount();
        for(int i = elitotal-1; i>=0; i--){
            model4.removeRow(i);
        }
        
        //Creates new table
        String statement1 = "SELECT * FROM `registroclases`";

        List<String[]> listaClase = DBConnection.getInstance().selectStatement(statement1, 4);
        
        for(int i = 0; i < listaClase.size(); i++){
            //Save base class info
            String[] str = listaClase.get(i);
            String ID = str[0];
            String fecha = str[1];
            String id_clase = str[2];
            String numero_alumnos = str[3];
            
            //Save class info
            String[] diahora = Clase.generateDisplayFromClassID(id_clase).split(" - ");
            String diasemana = diahora[0];
            String hora = diahora[1];
            
            //Save ausentes count
            String statement4 = "SELECT COUNT(*) AS count FROM `ausencias` WHERE `id_registroclase` = '" + ID + "'";
            List<String[]> numeroAusentes = DBConnection.getInstance().selectStatement(statement4, 1);
            String ausentes = numeroAusentes.get(0)[0];
            
            
            //Add the rows
            String[] infoRegistro = {ID, fecha, diasemana, hora, numero_alumnos, ausentes};
            model4.addRow(infoRegistro);
        }
        
        
    }//GEN-LAST:event_btnactualizarregistroActionPerformed

    private void btncrearclaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncrearclaseActionPerformed
        String titulo = txttitulo.getText().toUpperCase();
        String horario = boxhorario.getSelectedItem().toString();
        String duracion = boxduracion.getSelectedItem().toString();
        int duracionInt = boxduracion.getSelectedIndex();
        String frecuencia = "1";
        String dia = boxdia.getSelectedItem().toString();
        String tematica = txttematica.getText();
        
        // Checks if any value is null
        if(titulo.trim().equals("") || horario.equals("Seleccione un horario") || dia.equals("Seleccione un dia") || duracionInt == 0){
            new PopupMessage("Error", Color.RED).setVisible(true);
            return;
        }

        //Checks that created class doesn't already exist
        String diaDB = Clase.setDBValue(dia);
        List<String[]> list = DBConnection.getInstance().selectStatement("SELECT * FROM `clasesemanal`", 7);
        for(int i = 0; i < list.size(); i++){
            String[] str = list.get(i);
            if(diaDB.equals(str[1]) && horario.equals(str[2])){
            new PopupMessage("Error - clases superpuestas", Color.RED).setVisible(true);
                return;
            }
        }

        //Gets class ID and inserts class into database
        String[] doselementos = horario.split(":");
        String classID = Clase.generateClassID(dia, doselementos[0], doselementos[1]);
        String statement = "INSERT INTO `clasesemanal` VALUES ('";
        statement += classID + "', '" + titulo + "', '" + diaDB + "', '" + horario + "', '" + duracion + "', '" + frecuencia + "', '0')";
        if(DBConnection.getInstance().modificationStatement(statement)){
            new PopupMessage("Clase agregada con exito", Color.GREEN).setVisible(true);
        }else{
            new PopupMessage("Error", Color.RED).setVisible(true);
            return;
        }
        
        //Inserts tematica
        if(tematica.trim().equals("")){
            String statement2 = "INSERT INTO `tematicaclases` VALUES('" + classID + "', null)";
            DBConnection.getInstance().modificationStatement(statement2);
        } else {
            String statement2 = "INSERT INTO `tematicaclases` VALUES('" + classID + "', '" + tematica + "')";
            DBConnection.getInstance().modificationStatement(statement2);
        }
            
        //Sets values back to empty
        txttitulo.setText("");
        boxhorario.setSelectedIndex(0);
        boxduracion.setSelectedIndex(0);
        boxdia.setSelectedIndex(0);
        txttematica.setText("");
        
//        //Checks if cell is already in use
//        //-------------------------REVISAR ALGORITMO------------------------------------
//        int intnum = Integer.parseInt(num);
//        int intNumTableValue = intnum-1;
//        try{
//            while(tablasemanal.getValueAt((intNumTableValue), Integer.parseInt(diaDB)) != null){
//                System.out.println("Cell not null values: ");
//                System.out.println("    Row: " + intNumTableValue);
//                System.out.println("    Column: " + diaDB);
//
//                String selectstatement = "SELECT * FROM `clasesemanal` WHERE `diasemana` = '" + diaDB + "' AND `id` = '" + intnum + "'";
//                List<String[]> results = DBConnection.getInstance().selectStatement(selectstatement, 5);
//                String[] strRes = results.get(0);
//                String diasemana = strRes[1];
//                String horavieja = strRes[2];
//                String numClase = strRes[3];
//
//                int newNumClase = Integer.parseInt(numClase)+1;
//                String stupdate = "UPDATE `clasesemanal` SET `ID` = '" + newNumClase + "' WHERE `clasesemanal`.`diasemana` = " + diasemana + " AND `clasesemanal`.`hora` = '" + horavieja + "'";
//                DBConnection.getInstance().modificationStatement(stupdate);
//                intnum++;
//            }
//        }catch(IndexOutOfBoundsException e){
//            System.out.println(e.getMessage());
//        }

    }//GEN-LAST:event_btncrearclaseActionPerformed

    private void btnactualizarclasesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnactualizarclasesActionPerformed
        //Deletes previous table
        int elitotal = tablasemanal.getRowCount();
        for(int i = elitotal-1; i>=0; i--){
            for(int l = 1; l <= 6; l++){
                model3.setValueAt(null , i, l);
            }
        }

        Clase.updateClassNumber();
        
        //Fill table
        String statement = "SELECT * FROM `clasesemanal`";
        List<String[]> list = DBConnection.getInstance().selectStatement(statement, 7);
        for(int i = 0; i < list.size(); i++){
            //Save the info
            String[] str = list.get(i);
            String titulo = str[1];
            String diasemana = str[2];
            String hora = str[3];
            String duracion = str[4];
            String frecuencia = str[5];
            String cantidad = str[6];

            //Add the rows
            int diasemanaInt = Integer.parseInt(diasemana)+1;
            int horaPosicion = Clase.getPositionFromTime(hora);
            int duracionTabla = Clase.getDurationFromTime(duracion);
            
            model3.setValueAt(titulo + "(" + cantidad + ")", horaPosicion, diasemanaInt);
            
            for(int l = 2; l <= duracionTabla; l++){
                horaPosicion++;
                model3.setValueAt(titulo + "(" + cantidad + ")", horaPosicion, diasemanaInt);
            }
        }
    }//GEN-LAST:event_btnactualizarclasesActionPerformed

    private void tablasemanalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablasemanalMouseClicked
        if(tablasemanal.getSelectedColumn() == 0){
            return;
        }
        String diaDB = String.valueOf(tablasemanal.getSelectedColumn()-1);
        
        if(tablasemanal.getValueAt(tablasemanal.getSelectedRow(), tablasemanal.getSelectedColumn()) != null){
            String hora[] = tablasemanal.getValueAt(tablasemanal.getSelectedRow(), 0).toString().split(" - ");
            int dia = tablasemanal.getSelectedColumn()-1;
            
            String statement1 = "SELECT * FROM `clasesemanal`";
            List<String[]> horas = DBConnection.getInstance().selectStatement(statement1, 7);
            for(int i = 0; i < horas.size(); i++){
                if(!horas.get(i)[2].equals(diaDB)){
                    continue;
                }
                String[] str = horas.get(i);
                String horaDB = str[3];
                String[] horasminsDB = horaDB.split(":");
                String duracionDB = str[4];
                String[] horasminsduracionDB = duracionDB.split(":");
                
                LocalTime horaComienzoDB = LocalTime.of(Integer.parseInt(horasminsDB[0]), Integer.parseInt(horasminsDB[1]));
                LocalTime horaFinDB = LocalTime.of(Integer.parseInt(horasminsDB[0]), Integer.parseInt(horasminsDB[1]));
                horaFinDB = horaFinDB.plusHours(Integer.parseInt(horasminsduracionDB[0]));
                horaFinDB = horaFinDB.plusMinutes(Integer.parseInt(horasminsduracionDB[1]));
                
                String[] horasmins = hora[0].split(":");
                LocalTime horaClase = LocalTime.of(Integer.parseInt(horasmins[0]), Integer.parseInt(horasmins[1]));
                
                if(horaClase.isAfter(horaComienzoDB) && horaClase.isBefore(horaFinDB)){
                    hora[0] = horaComienzoDB.toString();
                }
            }
            
            String statement2 = "SELECT * FROM `clasesemanal` AS t1 INNER JOIN `tematicaclases` AS t2 ON t1.ID = t2.id_clase WHERE `hora` = '" + hora[0] + "' AND `diasemana` = " + dia + " ";
            List<String[]> list = DBConnection.getInstance().selectStatement(statement2, 9);

            ViewerClaseSemanal VCS = new ViewerClaseSemanal();
            VCS.setClase(list.get(0));
            VCS.setAlumnos();
            VCS.setAnotaciones();
            VCS.setTabla(tablasemanal);
            VCS.setVisible(true);
        }
        
    }//GEN-LAST:event_tablasemanalMouseClicked

    private void btnagregarregistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnagregarregistroActionPerformed
        CreadorRegistro CR = new CreadorRegistro();
        CR.setVisible(true);
    }//GEN-LAST:event_btnagregarregistroActionPerformed

    private void tablaregistroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaregistroMouseClicked
        List<String> info = new ArrayList();
        info.add(tablaregistro.getValueAt(tablaregistro.getSelectedRow(), 0).toString());
        info.add(tablaregistro.getValueAt(tablaregistro.getSelectedRow(), 1).toString());
        String diaclase = tablaregistro.getValueAt(tablaregistro.getSelectedRow(), 2).toString();
        String horaclase = tablaregistro.getValueAt(tablaregistro.getSelectedRow(), 3).toString();
        info.add(diaclase + " - " + horaclase + ":00");
        
        EditorRegistro ER = new EditorRegistro();
        ER.setInfo(info);
        ER.setVisible(true);
    }//GEN-LAST:event_tablaregistroMouseClicked

    private void initModelListaSemanal(){
        model3 = new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"08:00 - 08:30", null, null, null, null, null, null},
                {"08:30 - 09:00", null, null, null, null, null, null},
                {"09:00 - 09:30", null, null, null, null, null, null},
                {"09:30 - 10:00", null, null, null, null, null, null},
                {"10:00 - 10:30", null, null, null, null, null, null},
                {"10:30 - 11:00", null, null, null, null, null, null},
                {"11:00 - 11:30", null, null, null, null, null, null},
                {"11:30 - 12:00", null, null, null, null, null, null},
                {"12:00 - 12:30", null, null, null, null, null, null},
                {"12:30 - 13:00", null, null, null, null, null, null},
                {"13:00 - 13:30", null, null, null, null, null, null},
                {"13:30 - 14:00", null, null, null, null, null, null},
                {"14:00 - 14:30", null, null, null, null, null, null},
                {"14:30 - 15:00", null, null, null, null, null, null},
                {"15:00 - 15:30", null, null, null, null, null, null},
                {"15:30 - 16:00", null, null, null, null, null, null},
                {"16:00 - 16:30", null, null, null, null, null, null},
                {"16:30 - 17:00", null, null, null, null, null, null},
                {"17:00 - 17:30", null, null, null, null, null, null},
                {"17:30 - 18:00", null, null, null, null, null, null},
                {"18:00 - 18:30", null, null, null, null, null, null},
                {"18:30 - 19:00", null, null, null, null, null, null},
                {"19:00 - 19:30", null, null, null, null, null, null},
                {"19:30 - 20:00", null, null, null, null, null, null}
            },
            new String [] {
                "", "Lunes", "Martes", "Miercoles", "Jueves", "Viernes", "Sabado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            @Override
            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        };
        tablasemanal.setRowHeight(50);
        tablasemanal.setShowGrid(true);
        tablasemanal.setModel(model3);
    }
    private void initModelRegistroClases(){
        model4.addColumn("ID");
        model4.addColumn("Fecha");
        model4.addColumn("Dia de la Semana");
        model4.addColumn("Hora");
        model4.addColumn("Alumnos esperados");
        model4.addColumn("Ausentes");
        tablaregistro.setShowGrid(true);
        tablaregistro.setModel(model4);
    }
    
    @SuppressWarnings("Convert2Lambda")
    public static void main2(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClaseFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new ClaseFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> boxdia;
    private javax.swing.JComboBox<String> boxduracion;
    private javax.swing.JComboBox<String> boxhorario;
    private javax.swing.JButton btnactualizarclases;
    private javax.swing.JButton btnactualizarregistro;
    private javax.swing.JButton btnagregarregistro;
    private javax.swing.JButton btncrearclase;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable tablaregistro;
    private javax.swing.JTable tablasemanal;
    private javax.swing.JTextPane txttematica;
    private javax.swing.JTextField txttitulo;
    // End of variables declaration//GEN-END:variables
}
