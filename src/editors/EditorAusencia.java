/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package editors;

import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import tools.Alumno;
import tools.Clase;
import tools.DBConnection;
import tools.PopupMessage;

/**
 *
 * @author Edu
 */
public class EditorAusencia extends javax.swing.JFrame implements Editor{

    List<String> infoAusencia;
    //Content: (Nombre, ID, Fecha, Estado, Clase de recuperación + fecha, razón)
    List<String> infoBoxes = new ArrayList();
    //Content: (recupera?, clase recuperacion, razón)
    
    /**
     * Creates new form EditorAusencias
     */
    public EditorAusencia() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel10 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtid = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        boxclase = new javax.swing.JComboBox<>();
        boxrecupera = new javax.swing.JComboBox<>();
        txtfecha = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        txtrazon = new javax.swing.JTextPane();
        btnaplicar = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        txtnombre = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel10.setText("Va a recuperar?");

        jLabel8.setText("ID de clase");

        txtid.setToolTipText("00:00");
        txtid.setEnabled(false);

        jLabel9.setText("Fecha de ausencia");

        jLabel12.setText("Clase de recuperación");

        boxclase.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione la clase" }));

        boxrecupera.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Si", "No" }));
        boxrecupera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxrecuperaActionPerformed(evt);
            }
        });

        txtfecha.setToolTipText("00:00");
        txtfecha.setEnabled(false);

        jLabel14.setText("Razón de ausencia");

        jScrollPane7.setViewportView(txtrazon);

        btnaplicar.setText("Aplicar cambios");
        btnaplicar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaplicarActionPerformed(evt);
            }
        });

        jLabel11.setText("Nombre");

        txtnombre.setToolTipText("00:00");
        txtnombre.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtid, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                    .addComponent(txtfecha, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                    .addComponent(jScrollPane7)
                    .addComponent(boxrecupera, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(boxclase, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtnombre))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                .addComponent(btnaplicar, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11)
                    .addComponent(txtnombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnaplicar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtfecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(boxrecupera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(boxclase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnaplicarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaplicarActionPerformed
        checkAndApplyChanges();
    }//GEN-LAST:event_btnaplicarActionPerformed

    private void boxrecuperaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxrecuperaActionPerformed
        if("Si".equals(boxrecupera.getSelectedItem())){
            boxclase.setEnabled(true);
        }else{
            boxclase.setEnabled(false);
            boxclase.setSelectedIndex(0);
        }
    }//GEN-LAST:event_boxrecuperaActionPerformed

    /**
     * @param args the command line arguments
     */
    @SuppressWarnings("Convert2Lambda")
    public static void main2(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditorAusencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new EditorAusencia().setVisible(true);
            }
        });
    }
    
    @Override
    @SuppressWarnings("ConvertToStringSwitch")
    public void setInfo(List<String> info) {
        this.infoAusencia = info;
        txtnombre.setText(info.get(0));
        txtid.setText(info.get(1));
        txtfecha.setText(info.get(2));
        setClases(info.get(3), info.get(4));
        if("Pendiente".equals(info.get(3))){
            boxrecupera.setSelectedIndex(0);
            infoBoxes.add("Si");
            boxclase.setEnabled(true);
            if(info.get(4) != null){
                boxclase.setSelectedItem(info.get(4));
                infoBoxes.add(info.get(4));
            }else{
                boxclase.setSelectedIndex(0);
                infoBoxes.add(boxclase.getItemAt(0));
            }
        }else if("Recuperada".equals(info.get(3))){
            boxrecupera.setSelectedIndex(0);
            infoBoxes.add("Si");
            infoBoxes.add(infoAusencia.get(4));
            boxclase.setSelectedIndex(1);
            boxclase.setEnabled(false);
        } else {
            boxrecupera.setSelectedIndex(1);
            infoBoxes.add("No");
            if(info.get(4) != null){
                boxrecupera.setEnabled(false);
                boxclase.addItem(info.get(4));
                boxclase.setSelectedItem(info.get(4));
                boxclase.setEnabled(false);
                infoBoxes.add(info.get(4));
            }else{
                boxrecupera.setEnabled(true);
                boxclase.setSelectedIndex(0);
                boxclase.setEnabled(false);
                infoBoxes.add(boxclase.getItemAt(0));
            }
        }
        
        String statement = "SELECT * FROM `razonesausencias` WHERE `dni_alumno` = '" + Alumno.getDNIFromName(info.get(0)) + "' AND `id_registroclase` = '" + info.get(1) + "'";
        List<String[]> razon = DBConnection.getInstance().selectStatement(statement, 3);
        if(razon.get(0)[0] == null){
            razon.get(0)[0] = "";
        }
        txtrazon.setText(razon.get(0)[2]);
        infoBoxes.add(razon.get(0)[2]);
        System.out.println(infoBoxes);
        
    }

    @Override
    public void checkAndApplyChanges() {
        boolean isFirst = true;
        
        //Save new info
        String newRecupera = boxrecupera.getSelectedItem().toString();
        String newRecuperacion = boxclase.getSelectedItem().toString();
        String newRazonausencia = txtrazon.getText().trim();
        
        System.out.println("Info previa: " + infoBoxes);
        System.out.println("Info nueva: " + newRecupera + ", " + newRecuperacion + ", " + newRazonausencia);
        
        //Check changes in order
        String updstatement = "UPDATE `ausencias` SET ";
        if(!infoBoxes.get(0).equals(newRecupera)){
            if("Si".equals(newRecupera)){
                updstatement += "`recuperada` = null";
            }else{
                updstatement += "`recuperada` = 0";
            }
            isFirst = false;
        }
        if(!infoBoxes.get(1).equals(newRecuperacion)){
            if(!isFirst){
                updstatement += ", ";
            }
            if(!"Seleccione la clase".equals(infoBoxes.get(1))){
                String statement = "DELETE FROM `clasesalumnos` WHERE `dni_alumno` = '" + Alumno.getDNIFromName(infoAusencia.get(0)) + "' AND `id_clase` = '" + Clase.generateClassIDFromDisplay(infoBoxes.get(1)) + "'";
                DBConnection.getInstance().modificationStatement(statement);
            }
            if(!"Seleccione la clase".equals(newRecuperacion)){
                updstatement += "`id_claserecupera` = '" + Clase.generateClassIDFromDisplay(newRecuperacion) + "'";
                String statement = "INSERT INTO `clasesalumnos` VALUES ('" + Alumno.getDNIFromName(infoAusencia.get(0)) + "', '" + Clase.generateClassIDFromDisplay(newRecuperacion) + "', 1)";
                if(!DBConnection.getInstance().modificationStatement(statement)){
                    new PopupMessage("Error", Color.RED).setVisible(true);
                    return;
                }
            }else{
                updstatement += "`id_claserecupera` = null";
            }
            isFirst = false;
        }
        if(!newRazonausencia.equals(infoBoxes.get(2))){
            if(newRazonausencia.equals("")){
                String statement = "UPDATE `razonesausencias` SET `razon` = null WHERE `dni_alumno` = '" + Alumno.getDNIFromName(infoAusencia.get(0)) + "' AND `id_registroclase` = '" + infoAusencia.get(1) + "'";
                DBConnection.getInstance().modificationStatement(statement);
            }else{
                String statement = "UPDATE `razonesausencias` SET `razon` = '" + newRazonausencia + "' WHERE `dni_alumno` = '" + Alumno.getDNIFromName(infoAusencia.get(0)) + "' AND `id_registroclase` = '" + infoAusencia.get(1) + "'";
                DBConnection.getInstance().modificationStatement(statement);
            }
        }
        
        updstatement += " WHERE `id_registroclase` = '" + infoAusencia.get(1) + "' AND `id_alumno` = '" + Alumno.getDNIFromName(infoAusencia.get(0)) + "'";
        
        if(!isFirst){
            if(!DBConnection.getInstance().modificationStatement(updstatement)){
                new PopupMessage("Error", Color.RED).setVisible(true);
                return;
            }
        }
        
        Clase.updateClassNumber();
        
        new PopupMessage("Ausencia actualizada con exito", Color.GREEN).setVisible(true);
        dispose();
    }

    @Override
    public void delete() {
    }
    
    @SuppressWarnings("ConvertToStringSwitch")
    public void setClases(String estado, String clase){
        if("Pendiente".equals(estado)){
            String statement = "SELECT `ID` FROM `clasesemanal`";
            List<String[]> infoClases = DBConnection.getInstance().selectStatement(statement, 1);
            for(int i = 0; i < infoClases.size(); i++){
                boxclase.addItem(Clase.generateDisplayFromClassID(infoClases.get(i)[0]));
            }
        }else if("Recuperada".equals(estado)){
            boxclase.addItem(clase);
            boxclase.setEnabled(false);
            boxrecupera.setEnabled(false);
        }else{
            String statement = "SELECT `ID` FROM `clasesemanal`";
            List<String[]> infoClases = DBConnection.getInstance().selectStatement(statement, 1);
            for(int i = 0; i < infoClases.size(); i++){
                boxclase.addItem(Clase.generateDisplayFromClassID(infoClases.get(i)[0]));
            }
            boxrecupera.setSelectedIndex(1);
            boxclase.setSelectedIndex(0);
            boxclase.setEnabled(false);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> boxclase;
    private javax.swing.JComboBox<String> boxrecupera;
    private javax.swing.JButton btnaplicar;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTextField txtfecha;
    private javax.swing.JTextField txtid;
    private javax.swing.JTextField txtnombre;
    private javax.swing.JTextPane txtrazon;
    // End of variables declaration//GEN-END:variables

}
