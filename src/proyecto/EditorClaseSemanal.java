/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto;

import java.util.List;
import javax.swing.JTable;

/**
 *
 * @author Edu
 */
public class EditorClaseSemanal extends javax.swing.JFrame {

    private String ID;
    private String diasemana;
    private String horario;
    private String numero;
    private String cantidad;
    private String tematica;
    
    private boolean changedID = false;
    private String newID;
    private List<String[]> clasesalumnos;
    
    private String[] boxInfo;
    
    private javax.swing.DefaultComboBoxModel boxclasemodel;
    private final Clase clase;
    private ViewerClaseSemanal VCS;
    private EditorClaseSemanal ECS;
    private javax.swing.JTable tablasemanal;
    
    /**
     * Creates new form EditorClaseSemanal
     */
    public EditorClaseSemanal() {
        initComponents();
        clase = new Clase();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        boxdia = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        txttematica = new javax.swing.JTextPane();
        jLabel8 = new javax.swing.JLabel();
        txthorario = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        numclase = new javax.swing.JSpinner();
        btnaplicar = new javax.swing.JButton();
        btneliminar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        boxdia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione", "Lunes", "Martes", "Miercoles", "Jueves", "Viernes", "Sabado" }));

        jLabel11.setText("Temática");

        jScrollPane7.setViewportView(txttematica);

        jLabel8.setText("Horario: ");

        txthorario.setToolTipText("00:00");

        jLabel9.setText("Dia de la semana:");

        jLabel10.setText("N° de clase en el dia:");

        btnaplicar.setText("Aplicar cambios");
        btnaplicar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaplicarActionPerformed(evt);
            }
        });

        btneliminar.setText("Eliminar clase");
        btneliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel8)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txthorario, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numclase, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(boxdia, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 694, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(101, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btneliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(btnaplicar, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txthorario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(boxdia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(numclase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnaplicar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btneliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnaplicarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaplicarActionPerformed
        boolean first = true;
        boolean diaCambiado = false;
        boolean horaCambiada = false;
        int newNum = Integer.parseInt(numclase.getValue().toString());
        String newDia = boxdia.getSelectedItem().toString();
        String newDiaDB = clase.setDBValue(newDia);
        
        //Formar String con valores cambiados
        String statement = "UPDATE `clasesemanal` SET ";
        
        if(!txthorario.getText().equals(horario)){
            if(!first){
                statement += ", ";
            }
            statement += "`hora` = '" + txthorario.getText().toUpperCase() + "' ";
            first = false;
            horaCambiada = true;
        }
        if(!boxdia.getSelectedItem().toString().equals(clase.setClassValue(diasemana))){
            String diaDB1 = clase.setDBValue(boxdia.getSelectedItem().toString());
            if(!first){
                statement += ", ";
            }
            statement += "`diasemana` = '" + diaDB1 + "' ";
            first = false;
            diaCambiado = true;
        }
        if(!numclase.getValue().toString().equals(numero)){
            
            if(!first){
                statement += ", ";
            }
            statement += "`Numero` = '" + newNum + "' ";
            first = false;
        }
        if(!txttematica.getText().equals(tematica)){
            if(!first){
                statement += ", ";
            }
            statement += "`tematica` = '" + txttematica.getText().toUpperCase() + "' ";
            first = false;
        }
        //Chequear si cambia el ID y borrar de clasealumnos
        if(horaCambiada || diaCambiado){
            if(!first){
                statement += ", ";
            }
            String[] doselementos = txthorario.getText().split(":");
            newID = clase.generateClassID(boxdia.getSelectedItem().toString(), doselementos[0], doselementos[1]);
            statement += "`ID` = '" + newID + "' ";
            
            String selstatement = "SELECT * FROM `clasesalumnos` WHERE `id_clase` = '" + ID + "'";
            clasesalumnos = DBConnection.getInstance().selectStatement(selstatement, TablasDB.clasesalumnos);
            String delstatement = "DELETE FROM `clasesalumnos` WHERE `id_clase` = '" + ID + "'";
            DBConnection.getInstance().modificationStatement(delstatement);
            
            changedID = true;
        }
        statement += "WHERE `clasesemanal`.`diasemana` = '" + diasemana + "' AND `clasesemanal`.`hora` = '" + horario + "'";
        
        //Chequear que haya algún cambio y que no superponga otra clase
        try{
            if(first){
                System.out.println("NO HUBIERON CAMBIOS - ERROR");
                PopupMessage pum = new PopupMessage(PopupType.ERROR);
                pum.setVisible(true);
                throw new RuntimeException();
            }
            List<String[]> listClase = DBConnection.getInstance().selectStatement("SELECT * FROM `clasesemanal`", TablasDB.clasesemanal);
            for(int i = 0; i < listClase.size(); i++){
                String[] str = listClase.get(i);
                if(newDiaDB.equals(str[1]) && txthorario.getText().equals(str[2]) && numclase.getValue().toString().equals(str[3])){
                    System.out.println("CLASE YA EXISTE - ERROR");
                    PopupMessage pum = new PopupMessage(PopupType.ERROR);
                    pum.setVisible(true);
                    throw new RuntimeException();
                }
            }
            
            DBConnection.getInstance().modificationStatement(statement);
            PopupMessage pum = new PopupMessage(PopupType.C_EDITADA);
            pum.setVisible(true);
            
        }catch(RuntimeException e){
            e.printStackTrace();
            PopupMessage pum = new PopupMessage(PopupType.ERROR);
            pum.setVisible(true);
        }
        
        //Volver a agregar clases a clasesalumnos
        if(changedID){
            for(int i = 0; i < clasesalumnos.size(); i++){
                String[] str = clasesalumnos.get(i);
                String instatement = "INSERT INTO `clasesalumnos` VALUES ('" + str[0] + "', '" + newID + "')";
                DBConnection.getInstance().modificationStatement(instatement);
            }
        }
        
        //Chequear que celdas no estén ocupadas en tabla
        int newNumTableValue = newNum-1;
        try{
            while(tablasemanal.getValueAt(newNumTableValue, Integer.parseInt(newDiaDB)) != null){
                System.out.println("Cell not null values:");
                System.out.println("    Row: " + newNumTableValue);
                System.out.println("    Column: " + newDiaDB);
                
                String[] doselementos = tablasemanal.getValueAt(newNumTableValue, Integer.parseInt(newDiaDB)).toString().split(" - ");
                List<String[]> claseToChange = DBConnection.getInstance().selectStatement("SELECT * FROM `clasesemanal` WHERE `diasemana` = '" + newDiaDB + "' AND `Hora` = '" + doselementos[0] + "'", TablasDB.clasesemanal);
                String[] str = claseToChange.get(0);
                String diasemana1 = str[1];
                String horavieja = str[2];
                String num = str[3];

                int newNumClase = Integer.parseInt(num)+1;

                String stupdate = "UPDATE `clasesemanal` SET `Numero` = '" + newNumClase + "' WHERE `clasesemanal`.`diasemana` = '" + diasemana1 + "' AND `clasesemanal`.`hora` = '" + horavieja + "'";
                DBConnection.getInstance().modificationStatement(stupdate);

                newNum++;
                newNumTableValue++;
            }
        }catch(NumberFormatException e){
            e.printStackTrace();
        }catch(IndexOutOfBoundsException e){
            System.out.println(e.getMessage());
        }
        
        dispose();
        VCS.dispose();
    }//GEN-LAST:event_btnaplicarActionPerformed

    private void btneliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneliminarActionPerformed
        ConfirmMessage cm = new ConfirmMessage();
        cm.setECS(ECS);
        cm.setVCS(VCS);
        cm.setClase(diasemana, horario);
        cm.setType(ConfirmType.clasealumno);
        cm.setVisible(true);
    }//GEN-LAST:event_btneliminarActionPerformed

    /**
     * @param args the command line arguments
     */
    @SuppressWarnings("Convert2Lambda")
    public static void main2(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditorClaseSemanal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new EditorClaseSemanal().setVisible(true);
            }
        });
    }
    
    public void setBox(){
        boxclasemodel = new javax.swing.DefaultComboBoxModel<>(new String[] { "Ninguna" });
        boxdia.setModel(boxclasemodel);
        for (String boxInfo1 : boxInfo) {
            boxdia.addItem(boxInfo1);
        }
    }
    
    public void setVCS(ViewerClaseSemanal VCS){
        this.VCS = VCS;
    }
    
    public void setECS(EditorClaseSemanal ECS){
        this.ECS = ECS;
    }
    
    public void setInfo(String[] infoClase){
        this.ID = infoClase[0];
        System.out.println("ID: " + ID);
        this.diasemana = infoClase[1];
        System.out.println("Dia Semana: " + diasemana);
        this.horario = infoClase[2];
        System.out.println("Horario: " + horario);
        this.numero = infoClase[3];
        System.out.println("Numero Clase: " + numero);
        this.cantidad = infoClase[4];
        System.out.println("Cantidad: " + cantidad);
        this.tematica = infoClase[5];
        System.out.println("Tematica: " + tematica);
        
        txthorario.setText(horario);
        int numclaseint = Integer.parseInt(numero);
        numclase.setValue(numclaseint);
        txttematica.setText(tematica);
        
        String[] infoDias = {"Lunes", "Martes", "Miercoles", "Jueves", "Viernes", "Sabado"};
        boxInfo = infoDias;
        setBox();
        String clasediasemana = clase.setClassValue(diasemana);
        boxdia.setSelectedItem(clasediasemana);
    }
    
    public void setTabla(JTable tablasemanal) {
        this.tablasemanal = tablasemanal;
        }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> boxdia;
    private javax.swing.JButton btnaplicar;
    private javax.swing.JButton btneliminar;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JSpinner numclase;
    private javax.swing.JTextField txthorario;
    private javax.swing.JTextPane txttematica;
    // End of variables declaration//GEN-END:variables

}
