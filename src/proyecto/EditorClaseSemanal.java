/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JTable;

/**
 *
 * @author Edu
 */
public class EditorClaseSemanal extends javax.swing.JFrame {

    private String horario;
    private String diasemana;
    private String numeroclase;
    private String tematica;
    
    private String[] boxInfo;
    
    private javax.swing.DefaultComboBoxModel boxclasemodel;
    private final DBConnection dbconn = new DBConnection();
    private final Connection conn;
    private PreparedStatement prepSt;
    private ResultSet rs;
    private final Clase clase = new Clase();
    private ViewerClaseSemanal VCS;
    private EditorClaseSemanal ECS;
    private javax.swing.JTable tablasemanal;
    
    /**
     * Creates new form EditorClaseSemanal
     */
    public EditorClaseSemanal() {
        initComponents();
        conn = dbconn.connection();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        boxdia = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        txttematica = new javax.swing.JTextPane();
        jLabel8 = new javax.swing.JLabel();
        txthorario = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        numclase = new javax.swing.JSpinner();
        btnaplicar = new javax.swing.JButton();
        btneliminar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        boxdia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione", "Lunes", "Martes", "Miercoles", "Jueves", "Viernes", "Sabado" }));

        jLabel11.setText("Temática");

        jScrollPane7.setViewportView(txttematica);

        jLabel8.setText("Horario: ");

        txthorario.setToolTipText("00:00");

        jLabel9.setText("Dia de la semana:");

        jLabel10.setText("N° de clase en el dia:");

        btnaplicar.setText("Aplicar cambios");
        btnaplicar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaplicarActionPerformed(evt);
            }
        });

        btneliminar.setText("Eliminar clase");
        btneliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel8)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txthorario, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numclase, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(boxdia, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 694, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(101, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btneliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(btnaplicar, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txthorario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(boxdia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(numclase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnaplicar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btneliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnaplicarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaplicarActionPerformed
        checkAndChangeClase();
        checkAndChangeAlumnos();
        dispose();
        VCS.dispose();
    }//GEN-LAST:event_btnaplicarActionPerformed

    private void btneliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneliminarActionPerformed
        ConfirmMessage cm = new ConfirmMessage();
        cm.setECS(ECS);
        cm.setVCS(VCS);
        cm.setClase(diasemana, horario);
        cm.setVisible(true);
    }//GEN-LAST:event_btneliminarActionPerformed

    /**
     * @param args the command line arguments
     */
    @SuppressWarnings("Convert2Lambda")
    public static void main2(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditorClaseSemanal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new EditorClaseSemanal().setVisible(true);
            }
        });
    }
    
    public void setBox(){
        boxclasemodel = new javax.swing.DefaultComboBoxModel<>(new String[] { "Ninguna" });
        boxdia.setModel(boxclasemodel);
        for (String boxInfo1 : boxInfo) {
            boxdia.addItem(boxInfo1);
        }
    }
    
    public void setVCS(ViewerClaseSemanal VCS){
        this.VCS = VCS;
    }
    
    public void setECS(EditorClaseSemanal ECS){
        this.ECS = ECS;
    }
    
    public void setInfo(String[] infoClase){
        this.horario = infoClase[2];
        System.out.println("Horario: " + horario);
        this.diasemana = infoClase[1];
        System.out.println("Dia Semana: " + diasemana);
        this.numeroclase = infoClase[0];
        System.out.println("Numero Clase: " + numeroclase);
        this.tematica = infoClase[4];
        System.out.println("Tematica: " + tematica);
        
        txthorario.setText(horario);
        int numclaseint = Integer.parseInt(numeroclase);
        numclase.setValue(numclaseint);
        txttematica.setText(tematica);
        
        String[] infoDias = {"Lunes", "Martes", "Miercoles", "Jueves", "Viernes", "Sabado"};
        boxInfo = infoDias;
        setBox();
        String clasediasemana = clase.setClassValue(diasemana);
        boxdia.setSelectedItem(clasediasemana);
    }
    
    public void setTabla(JTable tablasemanal) {
        this.tablasemanal = tablasemanal;
        }
    
    public void checkAndChangeAlumnos(){
        String statement;
        statement = "SELECT COUNT(*) AS count FROM `alumnos` WHERE `diaclase` = '" + diasemana + "' AND `horaclase` = '" + horario + "'";
        System.out.println(statement);
        try{
            prepSt = conn.prepareStatement(statement);
            rs = prepSt.executeQuery();
            rs.next();
            if(!"0".equals(rs.getString("count"))){
                statement = "UPDATE `alumnos` SET `diaclase` = '" + clase.setDBValue(boxdia.getSelectedItem().toString()) + "' AND `horaclase` = '" + txthorario.getText() + "' WHERE `diaclase` = '" + diasemana + "' AND `horaclase` = '" + horario + "'";
                System.out.println(statement);
                prepSt = conn.prepareStatement(statement);
                prepSt.execute();
                prepSt.close();
            }else{
                prepSt.close();
            }
            
        }catch(SQLException e){
            e.printStackTrace();
            PopupMessage pum = new PopupMessage(0);
            pum.setVisible(true);
        }
    }
    
    public void checkAndChangeClase(){
        boolean first = true;
        int numnum = Integer.parseInt(numclase.getValue().toString());
        String dia = boxdia.getSelectedItem().toString();
        String diaDB = clase.setDBValue(dia);
        String horavieja = "";
        String statement = "UPDATE `clasesemanal` SET ";
        
        if(!txthorario.getText().equals(horario)){
            if(!first){
                statement += ", ";
            }
            statement += "`hora` = '" + txthorario.getText().toUpperCase() + "' ";
            first = false;
        }
        
        if(!boxdia.getSelectedItem().toString().equals(clase.setClassValue(diasemana))){
            String diaDB1 = clase.setDBValue(boxdia.getSelectedItem().toString());
            if(!first){
                statement += ", ";
            }
            statement += "`diasemana` = '" + diaDB1 + "' ";
            first = false;
        }
        
        if(!numclase.getValue().toString().equals(numeroclase)){
            
            if(!first){
                statement += ", ";
            }
            statement += "`id` = '" + numnum + "' ";
            first = false;
        }
            
        if(!txttematica.getText().equals(tematica)){
            if(!first){
                statement += ", ";
            }
            statement += "`tematica` = '" + txttematica.getText().toUpperCase() + "' ";
        }
        statement += "WHERE `clasesemanal`.`diasemana` = '" + diasemana + "' AND `clasesemanal`.`hora` = '" + horario + "'";
        System.out.println(statement);
        try{
            if(first){
                System.out.println("MISMA CLASE - ERROR - 1");
                PopupMessage pum = new PopupMessage(0);
                pum.setVisible(true);
                throw new RuntimeException();
            }
            try{
                prepSt = conn.prepareStatement("SELECT * FROM `clasesemanal`");
                rs = prepSt.executeQuery();
                while(rs.next()){
                    if(diaDB.equals(rs.getString("diasemana")) && txthorario.getText().equals(rs.getString("hora")) && numclase.getValue().toString().equals(numeroclase)){
                        System.out.println("MISMA CLASE - ERROR - 2");
                        PopupMessage pum = new PopupMessage(0);
                        pum.setVisible(true);
                        prepSt.close();
                        throw new RuntimeException();
                    }
                }

                prepSt.close();
            }catch(SQLException e){
                e.printStackTrace();
                PopupMessage pum = new PopupMessage(0);
                pum.setVisible(true);
            }
            
            prepSt = conn.prepareStatement(statement);
            prepSt.execute();
            prepSt.close();
            PopupMessage pum = new PopupMessage(5);
            pum.setVisible(true);
            
        }catch(RuntimeException | SQLException e){
            e.printStackTrace();
            PopupMessage pum = new PopupMessage(0);
            pum.setVisible(true);
        }
        
        try{
            while(tablasemanal.getValueAt((numnum-1), Integer.parseInt(diaDB)) != null){
                System.out.println("ENTRÓ");
                try{
                    prepSt = conn.prepareStatement("SELECT * FROM `clasesemanal` WHERE `diasemana` = '" + diaDB + "' AND `id` = '" + numnum + "'");
                    rs = prepSt.executeQuery();
                    while(rs.next()){
                        horavieja = rs.getString("hora");
                    }
                    prepSt.close();
                }catch(SQLException e){
                        e.printStackTrace();
                }
                System.out.println("Checking cell...");
                System.out.println("    Row: " + numnum);
                System.out.println("    Column: " + diaDB);
                if(tablasemanal.getValueAt(numnum-1, Integer.parseInt(diaDB)) != null){
                    System.out.println("NOT NULL");
                    String stselect = "SELECT * FROM `clasesemanal` WHERE `id` = '" + numnum + "' AND `diasemana` = '" + diaDB + "'";
                    System.out.println(stselect);

                    try {
                        String id = "";
                        String diasemana1 = "";

                        prepSt = conn.prepareStatement(stselect);
                        rs = prepSt.executeQuery();
                        while(rs.next()){
                            id = rs.getString("id");
                            diasemana1 = rs.getString("diasemana");
                        }
                        int newid = Integer.parseInt(id)+1;

                        String stupdate = "UPDATE `clasesemanal` SET `ID` = '" + newid + "' WHERE `clasesemanal`.`diasemana` = " + diasemana1 + " AND `clasesemanal`.`hora` = '" + horavieja + "'";
                        System.out.println(stupdate);
                        prepSt = conn.prepareStatement(stupdate);
                        prepSt.execute();
                        prepSt.close();

                    } catch (NumberFormatException | SQLException e) {
                        e.printStackTrace();
                    }

                }else{
                    System.out.println("NULL");
                }
                if(tablasemanal.getValueAt((numnum-1), Integer.parseInt(diaDB)) == null){
                    break;
                }
                numnum++;
            }
        }catch(NumberFormatException e){
            e.printStackTrace();
        }catch(IndexOutOfBoundsException e){
            System.out.println(e.getMessage());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> boxdia;
    private javax.swing.JButton btnaplicar;
    private javax.swing.JButton btneliminar;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JSpinner numclase;
    private javax.swing.JTextField txthorario;
    private javax.swing.JTextPane txttematica;
    // End of variables declaration//GEN-END:variables

}
